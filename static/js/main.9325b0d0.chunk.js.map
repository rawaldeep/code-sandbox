{"version":3,"sources":["components/Editor.js","hooks/useLocalStorage.js","App.js","index.js"],"names":["Editor","props","language","displayName","value","onChange","useState","open","setOpen","className","type","onClick","prevOpen","icon","faCompressAlt","faExchangeAlt","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","useLocalStorage","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","App","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","timeout","setTimeout","clearTimeout","title","sandbox","frameBorder","width","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QAUe,SAASA,EAAOC,GAAQ,IAE/BC,EAIAD,EAJAC,SACAC,EAGAF,EAHAE,YACAC,EAEAH,EAFAG,MACAC,EACAJ,EADAI,SAL8B,EAQVC,oBAAS,GARC,mBAQ3BC,EAR2B,KAQrBC,EARqB,KAalC,OACI,yBAAKC,UAAS,2BAAsBF,EAAO,GAAK,cAC5C,yBAAKE,UAAU,gBACVN,EACD,4BACIO,KAAO,SACPD,UAAY,sBACZE,QAAS,kBAAMH,GAAQ,SAAAI,GAAQ,OAAKA,OAChC,kBAAC,IAAD,CAAiBC,KAAMN,EAAOO,IAAgBC,QAG1D,kBAAC,aAAD,CACAC,eAfa,SAACC,EAAQC,EAAMd,GAChCC,EAASD,IAeLA,MAAOA,EACPK,UAAU,sBACVU,QAAS,CACLC,cAAc,EACdC,MAAM,EACNC,KAAMpB,EACNqB,MAAO,WACPC,aAAa,MCvCd,SAASC,EAAgBC,EAAKC,GACzC,IAAMC,EAHK,iBAGkBF,EAD0B,EAE7BpB,oBAAS,WAC/B,IAAMuB,EAAYC,aAAaC,QAAQH,GACvC,OAAgB,MAAbC,EAA0BG,KAAKC,MAAMJ,GACb,oBAAjBF,EACCA,IAEAA,KARwC,mBAEhDvB,EAFgD,KAEzC8B,EAFyC,KAgBvD,OAJAC,qBAAU,WACNL,aAAaM,QAAQR,EAAaI,KAAKK,UAAUjC,MACnD,CAACwB,EAAaxB,IAET,CAACA,EAAO8B,GC6CJI,MA5Df,WAAgB,IAAD,EAEab,EAAgB,OAAQ,IAFrC,mBAELc,EAFK,KAECC,EAFD,OAGWf,EAAgB,MAAO,IAHlC,mBAGLgB,EAHK,KAGAC,EAHA,OAISjB,EAAgB,KAAM,IAJ/B,mBAILkB,EAJK,KAIDC,EAJC,OAKiBtC,mBAAS,IAL1B,mBAKLuC,EALK,KAKGC,EALH,KAwBb,OAjBAX,qBAAU,WACR,IAAMY,EAAUC,YAAW,WACzBF,EAAU,4BAAD,OAEFL,EAFE,+BAGHF,EAHG,gCAIDI,EAJC,sCAOR,KAEH,OAAO,kBAAMM,aAAaF,MAEzB,CAACR,EAAME,EAAKE,IAKb,oCACA,yBAAKlC,UAAU,iBACb,kBAACT,EAAD,CACAE,SAAS,MACTC,YAAY,OACZC,MAAOmC,EACPlC,SAAUmC,IAEV,kBAACxC,EAAD,CACAE,SAAS,MACTC,YAAY,MACZC,MAAOqC,EACPpC,SAAUqC,IAEV,kBAAC1C,EAAD,CACAE,SAAS,aACTC,YAAY,KACZC,MAAOuC,EACPtC,SAAUuC,KAGZ,yBAAKnC,UAAU,QACb,4BACAoC,OAASA,EACTK,MAAM,SACNC,QAAQ,gBACRC,YAAY,IACZC,MAAM,OACNC,OAAO,YCtDbC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.9325b0d0.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport 'codemirror/lib/codemirror.css'\r\nimport 'codemirror/theme/material.css'\r\nimport 'codemirror/mode/xml/xml'\r\nimport 'codemirror/mode/javascript/javascript'\r\nimport 'codemirror/mode/css/css'\r\nimport { Controlled as ControlledEditor } from 'react-codemirror2'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCompressAlt, faExchangeAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default function Editor(props) {\r\n    const {\r\n        language,\r\n        displayName,\r\n        value,\r\n        onChange\r\n    } = props \r\n\r\n    const [open, setOpen] = useState(true)\r\n\r\n    const handleChange = (editor, data, value) =>{\r\n        onChange(value)\r\n    }\r\n    return (\r\n        <div className={`editor-container ${open ? '' : 'collapsed'}`}>\r\n            <div className=\"editor-title\">\r\n                {displayName}\r\n                <button\r\n                    type = \"button\"\r\n                    className = \"expand-collapse-btn\"\r\n                    onClick={() => setOpen(prevOpen => !prevOpen)}>\r\n                        <FontAwesomeIcon icon={open ? faCompressAlt : faExchangeAlt}/>\r\n                    </button>\r\n            </div>\r\n            <ControlledEditor\r\n            onBeforeChange={handleChange}\r\n            value={value}\r\n            className=\"code-mirror-wrapper\"\r\n            options={{\r\n                lineWrapping: true,\r\n                lint: true,\r\n                mode: language,\r\n                theme: 'material',\r\n                lineNumbers: true\r\n            }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import {useEffect, useState} from 'react'\r\n\r\nconst PREFIX = 'codepen-clone-'\r\n\r\nexport default function useLocalStorage(key, initialValue) {\r\n    const prefixedKey = PREFIX + key\r\n    const [value, setValue] = useState(()=>{\r\n        const jsonValue = localStorage.getItem(prefixedKey)\r\n        if(jsonValue != null) return JSON.parse(jsonValue)\r\n        if(typeof initialValue === 'function'){\r\n            return initialValue()\r\n        }else{\r\n            return initialValue\r\n        }\r\n    })\r\n\r\n    useEffect(()=>{\r\n        localStorage.setItem(prefixedKey, JSON.stringify(value))\r\n    },[prefixedKey, value])\r\n\r\n    return [value, setValue]\r\n}\r\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport Editor from './components/Editor';\nimport useLocalStorage from './hooks/useLocalStorage'\n\nfunction App() {\n\n  const [ html, setHtml ] = useLocalStorage('html', '')\n  const [ css, setCss ] = useLocalStorage('css', '')\n  const [ js, setJs ] = useLocalStorage('js', '')\n  const [ srcDoc, setSrcDoc ] = useState('')\n\n  useEffect(()=>{\n    const timeout = setTimeout(()=>{\n      setSrcDoc(`\n    <html>\n    <style>${css}</style>\n    <body>${html}</body>\n    <script>${js}</script>\n    </html>\n      `)\n    }, 250)\n\n    return () => clearTimeout(timeout)\n\n  }, [html, css, js])\n\n  \n\n  return (\n    <>\n    <div className=\"pane top-pane\">\n      <Editor \n      language=\"xml\"\n      displayName=\"HTML\"\n      value={html}\n      onChange={setHtml}\n      />\n      <Editor\n      language=\"css\"\n      displayName=\"CSS\"\n      value={css}\n      onChange={setCss}\n      />\n      <Editor\n      language=\"javascript\"\n      displayName=\"JS\"\n      value={js}\n      onChange={setJs}\n      />\n    </div>\n    <div className=\"pane\">\n      <iframe \n      srcDoc= {srcDoc}\n      title=\"output\"\n      sandbox=\"allow-scripts\"\n      frameBorder=\"0\"\n      width=\"100%\"\n      height=\"100%\"\n      />\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}